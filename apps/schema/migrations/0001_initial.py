# Generated by Django 4.0.5 on 2022-06-19 13:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Column',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Column name')),
                ('range_start', models.IntegerField(blank=True, null=True, verbose_name='From')),
                ('range_end', models.IntegerField(blank=True, null=True, verbose_name='To')),
                ('order', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='ColumnSeparator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=100, unique=True)),
                ('char', models.CharField(max_length=1, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DataType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('ranged', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='StringCharacter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=100, unique=True)),
                ('char', models.CharField(max_length=1, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Schema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('modified', models.DateField(auto_now=True)),
                ('column_separator', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='schema.columnseparator')),
                ('data_types', models.ManyToManyField(related_name='schemas', through='schema.Column', to='schema.datatype')),
                ('string_character', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='schema.stringcharacter')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DataSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now=True)),
                ('file', models.FileField(blank=True, null=True, upload_to='')),
                ('status', models.CharField(choices=[('P', 'Preparing'), ('R', 'Ready'), ('F', 'Failed')], default='P', max_length=1)),
                ('schema', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schema.schema')),
            ],
        ),
        migrations.AddField(
            model_name='column',
            name='schema',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schema.schema'),
        ),
        migrations.AddField(
            model_name='column',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='schema.datatype'),
        ),
        migrations.AlterUniqueTogether(
            name='column',
            unique_together={('schema', 'name')},
        ),
    ]
